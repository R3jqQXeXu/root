"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

fix nvt command :h3

[Syntax:]

fix ID group-ID nvt Tstart Tstop Tdamp keyword value ... :pre

ID, group-ID are documented in "fix"_fix.html command :ulb,l
nvt = style name of this fix command :l
Tstart,Tstop = desired temperature at start/end of run (temperature units) :l
Tdamp = temperature damping parameter (time units) :l

zero or more keyword/value pairs may be appended :l
keyword = {drag} or {chain} :l
  {drag} value = drag factor added to thermostat (0.0 = no drag)
  {chain} value = {yes} or {no} :pre
:ule

[Examples:]

fix 1 all nvt 300.0 300.0 100.0
fix 1 all nvt 300.0 300.0 100.0 drag 0.2 chain no :pre

[Description:]

Perform constant NVT integration to update positions and velocities
each timestep for atoms in the group using a Nose/Hoover temperature
thermostat "(Hoover)"_#Hoover.  V is volume; T is temperature.  This
creates a system trajectory consistent with the canonical ensemble.

The thermostat is applied to only the translational degrees of freedom
for the particles.  The translational degrees of freedom can also have
a bias velocity removed from them before thermostatting takes place;
see the description below.

The desired temperature at each timestep is a ramped value during the
run from {Tstart} to {Tstop}.  The {Tdamp} parameter is specified in
time units and determines how rapidly the temperature is relaxed.  For
example, a value of 100.0 means to relax the temperature in a timespan
of (roughly) 100 time units (tau or fmsec or psec - see the
"units"_units.html command).

The {chain} keyword determines whether Nose/Hoover chains are used or
not.  If {chain} is specified as {no}, then the original Nose/Hoover
formulation is used.  If {chain} is specified as {yes}, which is the
default, then chains as described in "(Martyna)"_#Martyna are used
which include extra non-physical variables which couple to the
thermostat.  Nose/Hoover chains provide a more robust NVT integrator,
overcoming non-ergodic sampling issues and energy oscillations found
with ordinary Nose/Hoover dynamics.  Our implementation uses one chain
and integrates the equations of motion via a Trotter expansion good to
2nd order accuracy in the timestep size.

In some cases (e.g. for solids) the temperature of the system can
oscillate undesirably when a Nose/Hoover thermostat is applied, though
this should be less of a problem if Nose/Hoover chains are used.  The
optional {drag} keyword will damp these oscillations in an ad-hoc
fashion, by altering the Nose/Hoover equations so that they no longer
exactly sample the canonical ensemble.  A value of 0.0 (no drag)
leaves the Nose/Hoover formalism unchanged.  A non-zero value adds a
drag term; the larger the value specified, the greater the damping
effect.  Performing a short run and monitoring the temperature is the
best way to determine if the drag term is working.  Typically a value
between 0.2 to 2.0 is sufficient to damp oscillations after a few
periods.

IMPORTANT NOTE: Unlike the "fix temp/berendsen"_fix_berendsen.html
command which performs thermostatting but NO time integration, this
fix performs thermostatting/barostatting AND time integration.  Thus
you should not use any other time integration fix, such as "fix
nve"_fix_nve.html on atoms to which this fix is applied.  Likewise,
this fix should not normally be used on atoms that also have their
temperature controlled by another fix - e.g. by "fix
langevin"_fix_nvt.html or "fix temp/rescale"_fix_temp_rescale.html
commands.

See "this howto section"_Section_howto.html#4_16 of the manual for a
discussion of different ways to compute temperature and perform
thermostatting.

This fix computes a temperature each timestep.  To do this, the fix
creates its own compute of style "temp", as if this command had been
issued:

compute fix-ID_temp group-ID temp :pre

See the "compute temp"_compute_temp.html command for details.  Note
that the ID of the new compute is the fix-ID + underscore + "temp",
and the group for the new compute is the same as the fix group.

Note that this is NOT the compute used by thermodynamic output (see
the "thermo_style"_thermo_style.html command) with ID = {thermo_temp}.
This means you can change the attributes of this fix's temperature
(e.g. its degrees-of-freedom) via the
"compute_modify"_compute_modify.html command or print this temperature
during thermodynamic output via the "thermo_style
custom"_thermo_style.html command using the appropriate compute-ID.
It also means that changing attributes of {thermo_temp} will have no
effect on this fix.

Like other fixes that perform thermostatting, this fix can be used
with "compute commands"_compute.html that calculate a temperature
after removing a "bias" from the atom velocities.  E.g. removing the
center-of-mass velocity from a group of atoms or only calculating
temperature on the x-component of velocity or only calculating
temperature for atoms in a geometric region.  This is not done by
default, but only if the "fix_modify"_fix_modify.html command is used
to assign a temperature compute to this fix that includes such a bias
term.  See the doc pages for individual "compute
commands"_compute.html to determine which ones include a bias.  In
this case, the thermostat works in the following manner: the current
temperature is calculated taking the bias into account, bias is
removed from each atom, thermostatting is performed on the remaining
thermal degrees of freedom, and the bias is added back in.

[Restart, fix_modify, output, run start/stop, minimize info:]

This fix writes the state of the Nose/Hoover thermostat to "binary
restart files"_restart.html.  See the "read_restart"_read_restart.html
command for info on how to re-specify a fix in an input script that
reads a restart file, so that the operation of the fix continues in an
uninterrupted fashion.

The "fix_modify"_fix_modify.html {temp} option is supported by this
fix.  You can use it to assign a temperature "compute"_compute.html
you have defined to this fix which will be used in its thermostatting
procedure, as described above.  For consistency, the group used by
this fix and by the compute should be the same.

The "fix_modify"_fix_modify.html {energy} option is supported by this
fix to add the energy change induced by Nose/Hoover thermostatting to
the system's potential energy as part of "thermodynamic
output"_thermo_style.html.

The cummulative energy change due to this fix is stored as a scalar
quantity, which can be accessed by various "output
commands"_Section_howto.html#4_15.  The scalar value calculated by
this fix is "extensive".

This fix can ramp its target temperature over multiple runs, using the
{start} and {stop} keywords of the "run"_run.html command.  See the
"run"_run.html command for details of how to do this.

This fix is not invoked during "energy minimization"_minimize.html.

[Restrictions:]

The final Tstop cannot be 0.0 since it would make the target T = 0.0
at some timestep during the simulation which is not allowed in 
the Nose/Hoover formulation.

[Related commands:]

"fix nve"_fix_nve.html, "fix npt"_fix_npt.html, "fix
temp/rescale"_fix_temp_rescale.html, "fix langevin"_fix_langevin.html,
"fix_modify"_fix_modify.html, "compute temp"_compute_temp.html

[Default:]

The keyword defaults are drag = 0.0 and chain = yes.

:line

:link(Hoover)
[(Hoover)] Hoover, Phys Rev A, 31, 1695 (1985).

:link(Martyna)
[(Martyna)] Martyna, Klein, Tuckerman, J Chem Phys, 97, 2635 (1992);
Martyna, Tuckerman, Tobias, Klein, Mol Phys, 87, 1117.
